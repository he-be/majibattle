name: CI/CD Pipeline - MajiBattle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Run Tests and Checks
    runs-on: self-hosted
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta environment
        run: |
          export VOLTA_HOME="$HOME/.volta"
          export PATH="$VOLTA_HOME/bin:$PATH"
          echo "VOLTA_HOME=$VOLTA_HOME" >> $GITHUB_ENV
          echo "$VOLTA_HOME/bin" >> $GITHUB_PATH

      - name: Cache node_modules (root)
        uses: corca-ai/local-cache@v2
        with:
          path: node_modules
          key: deps-root-${{ hashFiles('package-lock.json') }}
          base: /tmp/cache
        continue-on-error: true

      - name: Cache packages/workers node_modules
        uses: corca-ai/local-cache@v2
        with:
          path: packages/workers/node_modules
          key: deps-workers-${{ hashFiles('packages/workers/package-lock.json') }}
          base: /tmp/cache
        continue-on-error: true

      - name: Cache packages/shared node_modules
        uses: corca-ai/local-cache@v2
        with:
          path: packages/shared/node_modules
          key: deps-shared-${{ hashFiles('packages/shared/package-lock.json') }}
          base: /tmp/cache
        continue-on-error: true

      - name: Install dependencies
        run: npm ci

      - name: Run typecheck
        run: npm run typecheck

      - name: Run lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Coverage Report
        if: github.event_name == 'pull_request'
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        run: npm run build

  deploy-staging:
    name: Deploy to Staging (PR Preview)
    runs-on: self-hosted
    needs: test
    if: github.event_name == 'pull_request'
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta environment
        run: |
          export VOLTA_HOME="$HOME/.volta"
          export PATH="$VOLTA_HOME/bin:$PATH"
          echo "VOLTA_HOME=$VOLTA_HOME" >> $GITHUB_ENV
          echo "$VOLTA_HOME/bin" >> $GITHUB_PATH

      - name: Cache node_modules
        uses: corca-ai/local-cache@v2
        with:
          path: node_modules
          key: deps-deploy-${{ hashFiles('package-lock.json') }}
          base: /tmp/cache
        continue-on-error: true

      - name: Install dependencies
        run: npm ci

      - name: Build for staging
        run: npm run build

      - name: Deploy to staging environment
        run: |
          cd packages/workers
          npx wrangler deploy --env staging --var PR_NUMBER:${{ github.event.number }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Comment PR with staging URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const stagingUrl = `https://majibattle-pr-${prNumber}.workers.dev`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview Deployment Ready!**\n\nðŸ“± **Staging URL**: ${stagingUrl}\n\n_This deployment will be updated automatically when you push new commits to this PR._`
            });

  deploy-production:
    name: Deploy to Production
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta environment
        run: |
          export VOLTA_HOME="$HOME/.volta"
          export PATH="$VOLTA_HOME/bin:$PATH"
          echo "VOLTA_HOME=$VOLTA_HOME" >> $GITHUB_ENV
          echo "$VOLTA_HOME/bin" >> $GITHUB_PATH

      - name: Cache node_modules
        uses: corca-ai/local-cache@v2
        with:
          path: node_modules
          key: deps-deploy-${{ hashFiles('package-lock.json') }}
          base: /tmp/cache
        continue-on-error: true

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Deploy to production
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
