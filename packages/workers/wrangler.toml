name = "majibattle"
main = "dist/index.js"
compatibility_date = "2024-01-01"

# Development settings
[dev]
port = 8787
local_protocol = "http"

# Staging environment for PR previews
[env.staging]
name = "majibattle-staging"
secrets_store_secrets = [
  { binding = "GEMINI_API_KEY", store_id = "b8ffbf7dcbf34210b9bf420d54c0fdaa", secret_name = "GEMINI_API_KEY" }
]
vars = { GEMINI_MODEL = "gemini-2.5-flash-lite-preview-06-17" }

[[env.staging.durable_objects.bindings]]
name = "GAME_SESSION"
class_name = "GameSessionV2"

[[env.staging.migrations]]
tag = "v2"
new_sqlite_classes = [ "GameSessionV2" ]

# Production environment
[env.production]
name = "majibattle"
secrets_store_secrets = [
  { binding = "GEMINI_API_KEY", store_id = "b8ffbf7dcbf34210b9bf420d54c0fdaa", secret_name = "GEMINI_API_KEY" }
]
vars = { GEMINI_MODEL = "gemini-2.5-flash-lite-preview-06-17" }

[[env.production.durable_objects.bindings]]
name = "GAME_SESSION"
class_name = "GameSessionV3"

[[env.production.migrations]]
tag = "v3"
new_sqlite_classes = [ "GameSessionV3" ]

# Build settings
[build]
command = "npm run build"

# Durable Objects configuration
[[durable_objects.bindings]]
name = "GAME_SESSION"
class_name = "GameSession"

# Durable Objects migrations  
[[migrations]]
tag = "v1"
new_sqlite_classes = [ "GameSession" ]

# Note: Staging and Production use GameSessionV2 to force new SQL-enabled instances

# Environment variables
[vars]
GEMINI_MODEL = "gemini-2.5-flash-lite-preview-06-17"

# For local development: create .dev.vars file with GEMINI_API_KEY=your-key